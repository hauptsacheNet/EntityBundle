{% block form_start %}{% endblock %}
{% block form_end %}{% endblock %}

{% block form_widget_simple %}
    {%- spaceless %}
        {% set normal_text = not read_only and not disabled %}

        {% if normal_text %}
            {% set rootForm = form.vars.rootView %}
            {% set type = type|default('text') %}
            {% set className = (attr.class|default('') ~ ' editable')|trim %}
            {% if text_value|default(value) is empty %}
                {% set className = className ~ ' text-muted' %}
            {% endif %}
            {% set attr = attr|merge({
            'data-url': rootForm.vars.submitPath,
            'data-send': 'always',
            'data-name': full_name,
            'data-type': type,
            'data-value': value,
            'data-placement': placement|default('bottom'),
            'data-emptytext': attr.placeholder|default('empty')|trans,
            'data-emptyclass': 'text-muted',
            'class': className
            }) %}
        {% endif %}

        {% set attr = attr|merge({
        'href': attr.href|default('#' ~ id),
        'style': 'white-space: pre-wrap;' ~ attr.style|default('')
        }) %}
        <a {{ block('widget_container_attributes') }}>
            {{- text_value|default(value)|default(attr.placeholder|default(normal_text ? 'empty' : '')|trans) -}}
        </a>
    {% endspaceless %}
{% endblock %}

{% block hidden_widget %}
    {% set rootForm = form.vars.rootView %}
    {% set submitPath = rootForm.vars.submitPath %}
    {% set submit_script -%}
    var $this = jQuery(this);
    var req = jQuery.post({{ submitPath|json_encode|raw }}, {{ (full_name ~ '=')|json_encode|raw }} + encodeURIComponent($this.val()));
    req.fail(function(e){ alert(e.statusText); console.error(e) });
    req.success(function(e){ $this.trigger('save') });
    {%- endset %}
    <input type="hidden" {{ block('widget_attributes') }}
           onchange="{{ submit_script|e }}" {% if value is not empty %}value="{{ value }}" {% endif %}/>
{% endblock hidden_widget %}

{% block textarea_widget %}
    {%- set type = 'textarea' -%}
    {{- block('form_widget_simple') -}}
{% endblock textarea_widget %}

{% block form_row %}
    {{- form_widget(form) -}}
{% endblock %}

{% block choice_widget_collapsed %}
    {%- spaceless %}
        {% set choiceArray = [] %}
        {% set type = 'select2' %}
        {% set text_value = '' %}
        {% if empty_value is not none %}
            {% set choiceArray = choiceArray|merge([{ 'value': '', 'text': empty_value|trans }]) %}
        {% endif %}
        {% for choice in choices %}
            {% set choiceArray = choiceArray|merge([{
            'value': choice.value,
            'text': choice.label|trans({}, translation_domain)
            }]) %}
            {% if choice is selectedchoice(value) %}
                {% set text_value = choice.label|trans({}, translation_domain) %}
            {% endif %}
        {% endfor %}
        {% set attr = attr|merge({
        'data-source': choiceArray|json_encode,
        'data-select2': { dropdownAutoWidth: true, width: 'element' }|json_encode,
        'placeholder': empty_value|default('empty'|trans)
        }) %}
        {{ block('form_widget_simple') }}
    {% endspaceless %}
{% endblock choice_widget_collapsed %}

{% block date_widget %}
    {%- spaceless %}
        {% set type = 'date' %}
        {% set attr = attr|merge({
            'data-format': 'dd.mm.yyyy',
            'data-viewformat': 'dd.mm.yyyy'
        }) %}
        {{ block('form_widget_simple') }}
    {% endspaceless %}
{% endblock date_widget %}

{% block choice_widget_expanded -%}
    <div {{ block('widget_container_attributes') }}>
        {%- for child in form %}
            {{- form_row(child) -}}
        {% endfor -%}
    </div>
{% endblock choice_widget_expanded %}

{% block checkbox_widget %}
    {% spaceless %}
        {% set rootForm = form.vars.rootView %}
        {% set submitPath = rootForm.vars.submitPath %}
        {% set submit_script -%}
        var $this = jQuery(this);
        var $all = jQuery('[name={{ full_name|json_encode|raw }}]');
        $all.prop({disabled: true});
        var req = jQuery.post({{ submitPath|json_encode|raw }}, {{ (full_name ~ '=')|json_encode|raw }} + ($this.is(':checked') ? $this.val() : ''));
        req.done(function(){ $all.prop({disabled: false}) });
        req.fail(function(e){ alert(e.statusCode); console.error(e); });
        req.success(function(e){ $this.trigger('save') });
        {%- endset %}
        <input type="{{ type|default('checkbox') }}" onchange="{{ submit_script|e }}"
                {{ block('widget_attributes') }}
                {%- if value is defined %} value="{{ value }}"{% endif %}
                {%- if checked %} checked="checked"{% endif %} />
    {% endspaceless %}
{% endblock checkbox_widget %}

{% block radio_widget %}
    {%- set type = 'radio' -%}
    {{- block('checkbox_widget') -}}
{% endblock radio_widget %}

{% block checkbox_row %}
    {%- spaceless %}
        <div class="{{ type|default('checkbox') }}{% if disabled %} disabled{% endif %}">
            {% if label is not sameas(false) -%}

                {% if required -%}
                    {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
                {%- endif %}
                {% if label is empty -%}
                    {% set label = name|humanize %}
                {%- endif -%}

                <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
                {{- form_widget(form) -}}
                {{- label|trans({}, translation_domain) -}}
                </label>
            {% else %}
                {{- form_widget(form) -}}
            {%- endif %}
        </div>

        {{ form_errors(form) }}
    {% endspaceless %}
{% endblock checkbox_row %}

{% block radio_row %}
    {%- set type = 'radio' -%}
    {{- block('checkbox_row') -}}
{% endblock radio_row %}